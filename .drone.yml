---
kind: pipeline
name: rust

steps:
- name: Build and Test
  image: cryptocom/chain:latest
  commands:
  - export RUST_BACKTRACE=1
  - export RUSTFLAGS=-Ctarget-feature=+aes,+sse2,+sse4.1,+ssse3
  - export LD_LIBRARY_PATH=$HOME/lib
  - export LIBRARY_PATH=$HOME/lib
  - export PATH=$HOME/.cargo/bin:$HOME/.local/bin:$PATH
  - export PKG_CONFIG_PATH=$HOME/lib/pkgconfig
  - cargo build
  - cargo test
  - echo "HOME FOLDER = " $HOME

---
kind: pipeline
type: exec
name: integration-tests

platform:
  os: linux
  arch: amd64

steps:
- name: Build and Test
  environment:
    SPID:
      from_secret: dev_spid
    IAS_API_KEY:
      from_secret: dev_ias_key
  commands:
  - export NIX_REMOTE=daemon
  - export DOCKER_COMPOSE_PREFIX="${DRONE_BRANCH}"
  - export SGX_MODE=HW
  - . /etc/profile.d/nix.sh
  - nix-shell ci-scripts/drone.nix --run "./ci-scripts/run-integration-tests.sh"
- name: Teardown
  commands:
  - cd integration-tests
  - docker-compose -p "${DRONE_BRANCH}" down || exit 0
  when:
    status:
      - success
      - failure

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

---
kind: pipeline
type: exec
name: sgx-cargo-1804-hw1

platform:
  os: linux
  arch: amd64

steps:
- name: Build and Test
  commands:
  - ls -l /dev/sgx
  - ls -l /var/run/aesmd/aesm.socket
  - docker run --name hw1-${DRONE_COMMIT_SHA} --rm -v $PWD:/chain --device /dev/sgx cryptocom/chain:latest /bin/bash /chain/ci-scripts/tx-validation-hw-test.sh
- name: Teardown
  commands:
   - docker stop hw1-${DRONE_COMMIT_SHA} || exit 0		
  when:
    status:
      - success		
      - failure

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push

---
kind: pipeline
type: exec
name: sgx-cargo-1804-hw2

platform:
  os: linux
  arch: amd64

steps:
- name: Build and Test
  environment:
    SPID:
      from_secret: dev_spid
    IAS_API_KEY:
      from_secret: dev_ias_key
  commands:
  - ls -l /dev/sgx
  - ls -l /var/run/aesmd/aesm.socket
  - docker run --name hw2-${DRONE_COMMIT_SHA} --rm --env SPID=$SPID --env IAS_API_KEY=$IAS_API_KEY -v $PWD:/chain --device /dev/sgx cryptocom/chain:latest /bin/bash /chain/ci-scripts/tx-query-hw-test.sh
- name: Teardown
  commands:
   - docker stop hw2-${DRONE_COMMIT_SHA} || exit 0		
  when:
    status:
      - success		
      - failure

trigger:
  branch:
  - master
  - staging
  - trying
  event:
  - push


# FIMXE: 1) no need for this to be exec pipeline (can run in docker -- unjailtx doesn't ever touch enclave)
# FIXME: 2) proper cleanup -- this thing took over 100gb of 1 day of running
# FIXME: 3) it runs `cargo build` inside docker compose service and happily continue even if the compilation fails, wtf 
---
kind: pipeline
type: exec
name: integration-tests-jail-unjail

platform:
  os: linux
  arch: amd64

steps:
- name: integration-tests
  commands:
  - cd integration-tests/jail
  - ./run.sh
- name: teardown
  commands:
  - cd integration-tests/jail
  - ./shutdown.sh
  when:
    status:
     - success
     - failure

trigger:
  branch:
    - master
    - staging
    - trying
  event:
    - push

---
kind: signature
hmac: 0c58269524d8cee0b1ce9aa1cf614b35ef440a6bf42aa03b0ff4b932c706e2f6

...
